image: node:14.16.0

pipelines:
  default:
    - parallel:
        - step:
            name: 'Verify build environment'
            script: #show node and yarn version
              - node -v
              - yarn -v
        - step:
            name: 'Start build with node module cache'
            caches: #set caches for node modules to speed up building
              - node 
            script:
              - yarn install
              - yarn build
            artifacts: #single asterisk (*) to match files in folder, double asterisk (**) to match files and folders in folder
              - dist/**
    - step:
        name: 'Deploy to S3 test environment'
        deployment: test
        trigger: manual
        script:
          - pipe: atlassian/aws-s3-deploy:0.5.0
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_TEST
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_TEST
              AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION_TEST
              S3_BUCKET: 'test.nuphoto.co'
              LOCAL_PATH: 'dist' #should be the same as the output folder (artifacts)
              EXTRA_ARGS: '--delete' #remove files or objects from the target that are not present in the source
          #no cache for test environment (since free cloudflare can not remove cache by host)
    - step:
        name: 'Deploy to S3 prod environment'
        deployment: production
        trigger: manual
        script:
          - pipe: atlassian/aws-s3-deploy:0.5.0
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID_PROD
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY_PROD
              AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION_PROD
              S3_BUCKET: 'nuphoto.co'
              LOCAL_PATH: 'dist' #should be the same as the output folder (artifacts)
              EXTRA_ARGS: '--delete' #remove files or objects from the target that are not present in the source
          #remove cache in cloudflare after successfully sync S3
          - curl -X POST "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/purge_cache" -H "X-Auth-Email:$CF_MAIL" -H "X-Auth-Key:$CF_KEY" -H "Content-Type:application/json" --data '{"purge_everything":true}'
